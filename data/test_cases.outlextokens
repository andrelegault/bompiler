[eq, ==, 1]	[plus, +, 1]	[or, |, 1]	[openpar, (, 1]	[semi, ;, 1]	[if, if, 1] 	[public, public, 1]	[read, read, 1]
[noteq, <>, 2]	[minus, -, 2]	[and, &, 2]	[closepar, ), 2]	[comma, ,, 2]	[then, then, 2]	[private, private, 2]	[write, write, 2]
[lt, <, 3]	[mult, *, 3]	[not, !, 3]	[opencubr, {, 3]	[dot, ., 3]	[else, else, 3]	[func, func, 3]	[return, return, 3]
[gt, >, 4]	[div, /, 4]	[qmark, ?, 4]	[closecubr, }, 4]	[colon, :, 4]	[integer, integer, 4]	[var, var, 4]	[main, main, 4]
[leq, <=, 5]	[assign, =, 5]		[opensqbr, [, 5]	[coloncolon, ::, 5]	[float, float, 5]	[class, class, 5]	[inherits, inherits, 5]
[geq, >=, 6]			[closesqbr, ], 6]		[string, string, 6]	[while, while, 6]	[break, break, 6]
					[void, void, 7]		[continue, continue, 7]
	
[inlinecmt, // inline, 9]
[blockcmt, /* this is a single line block comment */, 10]
[blockcmt, /* this is a\nmultiple line\nblock comment \n*/, 11]
[blockcmt, /* /*this is a \nnested \nblock comment that does ends*/*/, 15]
[blockcmt, /*/*/*/*another nested block cmt*/*/*/*/, 18]
[inlinecmt, // 1.39e299 testing hello world, 19]
[id, helo, 20][inlinecmt, // some inline cmt, 20]
[invalidfloat, 1.30, 21][inlinecmt, // inline, 21]
[float, 1.3e0, 22][integer, 0, 22][integer, 0, 22][integer, 0, 22][integer, 399, 22][inlinecmt, //inline, 22]
[float, 1.2, 23][inlinecmt, // inline, 23]
[integer, 344, 24][inlinecmt, //hello world, 24]

[blockcmt, /* 1.39e299 testing hello world */, 26]
[id, henlo, 27][blockcmt, /* block*/, 27]
[invalidfloat, 1.30, 28][blockcmt, /* block */, 28]
[float, 1.3e0, 29][integer, 0, 29][integer, 0, 29][integer, 0, 29][integer, 399, 29][blockcmt, /*block/**/*/, 29]
[float, 1.2, 30][blockcmt, /* inline */, 30]
[integer, 344, 31][blockcmt, /*hello world*/, 31]
[invalidchar, _, 32][inlinecmt, //hello, 32]
[invalidchar, \, 33][blockcmt, /*hello/*#####*/*/, 33][invalidchar, _, 33]
[qmark, ", 34] [id, unterminated, 34] [id, with, 34] [id, invalid, 34] [blockcmt, /* chars */, 34]
[qmark, ", 35] [id, terminated, 35] [id, with, 35] [id, invalid, 35] [blockcmt, /* chars */, 35] [qmark, ", 35]

[integer, 0, 37]
[integer, 1, 38]
[integer, 10, 39]
[integer, 12, 40]
[integer, 123, 41]
[integer, 12345, 42]
[integer, 0, 43][integer, 1234, 43]
[integer, 0, 44][integer, 123450, 44]

[integer, 0, 46][float, 1.23, 46]
[integer, 0, 47][float, 1.23e99, 47]
[invalidfloat, 1.230, 48]
[invalidfloat, 1.230e99, 49]
[invalidfloat, 1.230e099, 50]
[integer, 0, 51][invalidfloat, 1.230e099, 51]
[float, 1.23, 52]
[float, 12.34, 53]
[invalidfloat, 120.340e10, 54]
[float, 12345.6789e-123, 55]
[integer, 1234, 56][id, e10, 56]
[invalidfloat, 1234.20e10, 57]
[invalidfloat, 1.20, 58]
[float, 1.398204, 59][id, f9398, 59]

[invalidstringlit, "unterminated, 61]
[id, u_nderscore, 62]
[id, d1g1t, 63]
[id, abc, 64]
[id, abc1, 65]
[id, a1bc, 66]
[id, abc_1abc, 67]
[id, test, 68]
[id, test, 69][invalidchar, \, 69][id, i_ng, 69]
[id, test, 70][invalidchar, \, 70][invalidchar, _, 70][id, ing, 70]
[float, 1.3e399, 71][id, some_id_after_some_float, 71]
[integer, 42, 72][id, some_id_after_some_int, 72]

[integer, 42, 74][void, void, 74]
[id, void_keyword, 75]
[void, void, 76] [invalidchar, _, 76] [if, if, 76]
[id, vo, 77][not, !, 77][id, d, 77] [id, void3, 77] [void, void, 77]
[id, publictest, 78]
[not, !, 79][public, public, 79]
[invalidchar, \, 80][public, public, 80]
[invalidchar, \, 81][id, public3, 81]
[float, 1.399, 82][id, fvoid, 82]
[float, 1.39e0, 83][integer, 9, 83][id, fvoid, 83]
[float, 1.39e9, 84][void, void, 84]
[float, 1.39e9, 85][stringlit, void, 85]
[float, 1.39e0, 86][integer, 9, 86][invalidstringlit, "unterminated, 86]
[float, 1.39e0, 87][integer, 9, 87][invalidstringlit, "unterminated\, 87]

[id, test, 89]
[inlinecmt, //, 90]
[blockcmt, /* this is a test */, 91]
[mult, *, 92][div, /, 92]
[mult, *, 93]
[invalidfloat, 0., 94]
[invalidfloat, 1., 95]
[invalidfloat, 0.lkjsdlkf, 96]
[invalidfloat, 1.ffflll, 97]
[float, 1.399, 98][id, fsdlkj, 98]
[float, 0.39833, 99][id, glkg, 99]

[invalidstringlit, "test !, 101] [id, shouldbe, 101] [id, wrong, 101][qmark, ", 101]
[invalidstringlit, "unterminated, 102]
[stringlit, , 103]
[stringlit, hello world, 104]
[id, ifabc, 105]
[blockcmt, /* test /* another */ */, 106]
[invalidchar, _, 107][id, idwithinvalidfirst, 107]
[id, i398398digitafterfirstletter, 108]
[id, i_underscore, 109]
[invalidblockcmt reached EOF, /* never finishes*\nhelloooooooooooo, 110]