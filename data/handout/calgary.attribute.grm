<AParams> ::= <Expr> tree,expr,1 <AParamsTail>
<AParams> ::= EPSILON node,e
<AParamsTail> ::= 'comma' <Expr> tree,expr,1 <AParamsTail> 
<AParamsTail> ::= EPSILON node,e
<AddOp> ::= 'plus' node,plus
<AddOp> ::= 'minus' node,minus
<AddOp> ::= 'or' node,or
<ArithExpr> ::= <Term> tree,term,2 <ArithExprTail>
<ArithExprTail> ::= <AddOp> <Term> tree,term,2 tree,addOp,3 <ArithExprTail>
<ArithExprTail> ::= EPSILON node,e
<ArraySizeRept> ::= 'lsqbr' <NumInt> tree,numint,1 'rsqbr' <ArraySizeRept> 
<ArraySizeRept> ::= EPSILON node,e
<AssignOp> ::= 'assign' node,assign
<AssignStatTail> ::= <AssignOp> <Expr> tree,expr,1 tree,assign,3
<ClassDecl> ::= 'class' 'id' (creatNode(id <Inherit> tree,inherlist,e 'lcurbr' <ClassDeclBody> tree,membList,e 'rcurbr' 'semi' tree,classdecl,3 <ClassDecl> 
<ClassDecl> ::= EPSILON node,e
<ClassDeclBody> ::= <Visibility> <MemberDecl> <ClassDeclBody> 
<ClassDeclBody> ::= EPSILON node,e
<ClassMethod> ::= 'sr' 'id' node,id
<ClassMethod> ::= EPSILON node,e
<Expr> ::= <ArithExpr> tree,arithExpr,e <ExprTail> 
<ExprTail> ::= <RelOp> <ArithExpr> tree,arithExpr,e tree,relExpr,3
<ExprTail> ::= EPSILON
<FParams> ::= <Type> tree,type,1 'id' node,id <ArraySizeRept> tree,dimlist,e tree,fparam,3 <FParamsTail> 
<FParams> ::= EPSILON node,e
<FParamsTail> ::= 'comma' <Type> tree,type,1 'id' node,id <ArraySizeRept> tree,dimlist,e tree,fparam,3 <FParamsTail> 
<FParamsTail> ::= EPSILON node,e
<Factor> ::= <FuncOrVar> 
<Factor> ::= 'intlit' node,int
<Factor> ::= 'floatlit' node,float
<Factor> ::= 'stringlit' node,string
<Factor> ::= 'lpar' <Expr> tree,expr,1 'rpar' 
<Factor> ::= 'not' <Factor> tree,not,1
<Factor> ::= <Sign> <Factor> tree,sign,1
<Factor> ::= 'qm' 'lsqbr' <Expr> tree,expr,1 'colon' <Expr> tree,expr,1 'colon' <Expr> tree,expr,1 'rsqbr' tree,expr,3
<FuncBody> ::= 'lcurbr' <MethodBodyVar> tree,statOrVarDecl,1 <StatementList> 'rcurbr' tree,statOrVarDecl,e tree,statblock,e
<FuncDecl> ::= 'func' 'id' node,id 'lpar' <FParams> tree,fparamlist,e 'rpar' 'colon' <FuncDeclTail> 'semi' tree,funcdecl,3
<FuncDeclTail> ::= <Type> tree,type,1
<FuncDeclTail> ::= 'void' node,void tree,type,1
<FuncDef> ::= <Function> <FuncDef> 
<FuncDef> ::= EPSILON node,e
<FuncHead> ::= 'func' 'id' node,id <ClassMethod> tree,scopeSpec,1 'lpar' <FParams> tree,fparamlist,e 'rpar' 'colon' <FuncDeclTail> tree,type,1
<FuncOrAssignStat> ::= 'id' node,id <FuncOrAssignStatIdnest> 
<FuncOrAssignStatIdnest> ::= <IndiceRep> tree,indicelist,e tree,variable,2 <FuncOrAssignStatIdnestVarTail> 
<FuncOrAssignStatIdnest> ::= 'lpar' <AParams> tree,paramslist,e tree,variable,2 'rpar' <FuncOrAssignStatIdnestFuncTail> 
<FuncOrAssignStatIdnestFuncTail> ::= 'dot' 'id' node,id <FuncStatTail> 
<FuncOrAssignStatIdnestFuncTail> ::= EPSILON node,e
<FuncOrAssignStatIdnestVarTail> ::= 'dot' 'id' node,id <FuncOrAssignStatIdnest> tree,dot,2
<FuncOrAssignStatIdnestVarTail> ::= <AssignStatTail> 
<FuncOrVar> ::= 'id' node,id <FuncOrVarIdnest> 
<FuncOrVarIdnest> ::= <IndiceRep> tree,indicelist,e <FuncOrVarIdnestTail> 
<FuncOrVarIdnest> ::= 'lpar' <AParams> tree,paramslist,e 'rpar' <FuncOrVarIdnestTail> 
<FuncOrVarIdnestTail> ::= 'dot' 'id' node,id <FuncOrVarIdnest> 
<FuncOrVarIdnestTail> ::= EPSILON node,e
<FuncStatTail> ::= <IndiceRep> tree,indicelist,e 'dot' 'id' node,id <FuncStatTail> 
<FuncStatTail> ::= 'lpar' <AParams> tree,paramslist,e 'rpar' <FuncStatTailIdnest> 
<FuncStatTailIdnest> ::= 'dot' 'id' node,id <FuncStatTail> 
<FuncStatTailIdnest> ::= EPSILON node,e
<Function> ::= <FuncHead> <FuncBody> tree,function,4
<IndiceRep> ::= 'lsqbr' <Expr> tree,expr,1 'rsqbr' <IndiceRep> 
<IndiceRep> ::= EPSILON node,e
<Inherit> ::= 'inherits' 'id' node,id <NestedId> 
<Inherit> ::= EPSILON node,e
<NumInt> ::= 'intlit' node,int
<NumInt> ::= EPSILON node,e
<MemberDecl> ::= <FuncDecl> 
<MemberDecl> ::= <VarDecl> tree,vardecl,1
<MethodBodyVar> ::= 'var' 'lcurbr' <VarDeclRep> tree,vardeclList,e 'rcurbr' 
<MethodBodyVar> ::= EPSILON node,e
<MultOp> ::= 'mult' 
<MultOp> ::= 'div' 
<MultOp> ::= 'and' 
<NestedId> ::= 'comma' 'id' node,id <NestedId> 
<NestedId> ::= EPSILON node,e
<Prog> ::= <ClassDecl> tree,classlist,e <FuncDef> tree,funcdeflist,e 'main' <FuncBody> 
<RelOp> ::= 'eq' node,eq
<RelOp> ::= 'neq' node,neq
<RelOp> ::= 'lt' node,lt
<RelOp> ::= 'gt' node,gt
<RelOp> ::= 'leq' node,leq
<RelOp> ::= 'geq' node,geq
<START> ::= <Prog> node,prog,1
<Sign> ::= 'plus' 
<Sign> ::= 'minus' 
<StatBlock> ::= 'lcurbr' <StatementList> 'rcurbr' 
<StatBlock> ::= <Statement> tree,statement,1
<StatBlock> ::= EPSILON node,e
<Statement> ::= <FuncOrAssignStat> 'semi' 
<Statement> ::= 'if' 'lpar' <Expr> tree,expr,1 'rpar' 'then' <StatBlock> tree,statblock,e 'else' <StatBlock> tree,statblock,e 'semi' 
<Statement> ::= 'while' 'lpar' <Expr> tree,expr,1 'rpar' <StatBlock> tree,statblock,e 'semi' tree,while,2
<Statement> ::= 'read' 'lpar' <Variable> tree,var,e 'rpar' 'semi' 
<Statement> ::= 'write' 'lpar' <Expr> tree,var,1 'rpar' 'semi' 
<Statement> ::= 'return' 'lpar' <Expr> tree,var,1 'rpar' 'semi' 
<Statement> ::= 'break' 'semi' 
<Statement> ::= 'continue' 'semi' 
<StatementList> ::= <Statement> tree,statement,1 <StatementList> 
<StatementList> ::= EPSILON node,e
<Term> ::= <Factor> <TermTail> 
<TermTail> ::= <MultOp> <Factor> tree,multop,2 <TermTail> 
<TermTail> ::= EPSILON node,e
<Type> ::= 'integer' node,integer
<Type> ::= 'float' node,float
<Type> ::= 'string' node,string
<Type> ::= 'id' node,id
<VarDecl> ::= <Type> tree,type,1 'id' node,id <ArraySizeRept> tree,dimlist,e 'semi' tree,vardecl,3
<VarDeclRep> ::= <VarDecl> <VarDeclRep> 
<VarDeclRep> ::= EPSILON node,e
<Variable> ::= 'id' node,id <VariableIdnest> 
<VariableIdnest> ::= <IndiceRep> tree,indicelist,e tree,variable,2 <VariableIdnestTail>
<VariableIdnestTail> ::= 'dot' 'id' node,id tree,dot,2 <VariableIdnest>
<VariableIdnestTail> ::= EPSILON node,e
<Visibility> ::= 'public' 
<Visibility> ::= 'private' 
<Visibility> ::= EPSILON
