<AParams> ::= <Expr> <AParamsTail> 
<AParams> ::= EPSILON 
<AParamsTail> ::= 'comma' <Expr> <AParamsTail> 
<AParamsTail> ::= EPSILON 
<AddOp> ::= 'plus' 
<AddOp> ::= 'minus' 
<AddOp> ::= 'or' 
<ArithExpr> ::= <Term> <ArithExprTail> 
<ArithExprTail> ::= <AddOp> <Term> <ArithExprTail> 
<ArithExprTail> ::= EPSILON 
<ArraySizeRept> ::= 'lsqbr' <IntNum> 'rsqbr' <ArraySizeRept> 
<ArraySizeRept> ::= EPSILON 
<AssignOp> ::= 'assign' 
<AssignStatTail> ::= <AssignOp> <Expr> 
<ClassDecl> ::= 'class' 'id' <Inherit> 'lcurbr' <ClassDeclBody> 'rcurbr' 'semi' <ClassDecl> 
<ClassDecl> ::= EPSILON 
<ClassDeclBody> ::= <Visibility> <MemberDecl> <ClassDeclBody> 
<ClassDeclBody> ::= EPSILON 
<ClassMethod> ::= 'sr' 'id' 
<ClassMethod> ::= EPSILON 
<Expr> ::= <ArithExpr> <ExprTail> 
<ExprTail> ::= <RelOp> <ArithExpr> 
<ExprTail> ::= EPSILON 
<FParams> ::= <Type> 'id' <ArraySizeRept> <FParamsTail> 
<FParams> ::= EPSILON 
<FParamsTail> ::= 'comma' <Type> 'id' <ArraySizeRept> <FParamsTail> 
<FParamsTail> ::= EPSILON 
<Factor> ::= <FuncOrVar> 
<Factor> ::= 'intlit' 
<Factor> ::= 'floatlit' 
<Factor> ::= 'stringlit' 
<Factor> ::= 'lpar' <Expr> 'rpar' 
<Factor> ::= 'not' <Factor> 
<Factor> ::= <Sign> <Factor> 
<Factor> ::= 'qm' 'lsqbr' <Expr> 'colon' <Expr> 'colon' <Expr> 'rsqbr' 
<FuncBody> ::= 'lcurbr' <MethodBodyVar> <StatementList> 'rcurbr' 
<FuncDecl> ::= 'func' 'id' 'lpar' <FParams> 'rpar' 'colon' <FuncDeclTail> 'semi' 
<FuncDeclTail> ::= <Type> 
<FuncDeclTail> ::= 'void' 
<FuncDef> ::= <Function> <FuncDef> 
<FuncDef> ::= EPSILON 
<FuncHead> ::= 'func' 'id' <ClassMethod> 'lpar' <FParams> 'rpar' 'colon' <FuncDeclTail> 
<FuncOrAssignStat> ::= 'id' <FuncOrAssignStatIdnest> 
<FuncOrAssignStatIdnest> ::= <IndiceRep> <FuncOrAssignStatIdnestVarTail> 
<FuncOrAssignStatIdnest> ::= 'lpar' <AParams> 'rpar' <FuncOrAssignStatIdnestFuncTail> 
<FuncOrAssignStatIdnestFuncTail> ::= 'dot' 'id' <FuncStatTail> 
<FuncOrAssignStatIdnestFuncTail> ::= EPSILON 
<FuncOrAssignStatIdnestVarTail> ::= 'dot' 'id' <FuncOrAssignStatIdnest> 
<FuncOrAssignStatIdnestVarTail> ::= <AssignStatTail> 
<FuncOrVar> ::= 'id' <FuncOrVarIdnest> 
<FuncOrVarIdnest> ::= <IndiceRep> <FuncOrVarIdnestTail> 
<FuncOrVarIdnest> ::= 'lpar' <AParams> 'rpar' <FuncOrVarIdnestTail> 
<FuncOrVarIdnestTail> ::= 'dot' 'id' <FuncOrVarIdnest> 
<FuncOrVarIdnestTail> ::= EPSILON 
<FuncStatTail> ::= <IndiceRep> 'dot' 'id' <FuncStatTail> 
<FuncStatTail> ::= 'lpar' <AParams> 'rpar' <FuncStatTailIdnest> 
<FuncStatTailIdnest> ::= 'dot' 'id' <FuncStatTail> 
<FuncStatTailIdnest> ::= EPSILON 
<Function> ::= <FuncHead> <FuncBody> 
<IndiceRep> ::= 'lsqbr' <Expr> 'rsqbr' <IndiceRep> 
<IndiceRep> ::= EPSILON 
<Inherit> ::= 'inherits' 'id' <NestedId> 
<Inherit> ::= EPSILON 
<IntNum> ::= 'intlit' 
<IntNum> ::= EPSILON 
<MemberDecl> ::= <FuncDecl> 
<MemberDecl> ::= <VarDecl> 
<MethodBodyVar> ::= 'var' 'lcurbr' <VarDeclRep> 'rcurbr' 
<MethodBodyVar> ::= EPSILON 
<MultOp> ::= 'mult' 
<MultOp> ::= 'div' 
<MultOp> ::= 'and' 
<NestedId> ::= 'comma' 'id' <NestedId> 
<NestedId> ::= EPSILON 
<Prog> ::= <ClassDecl> <FuncDef> 'main' <FuncBody> 
<RelOp> ::= 'eq' 
<RelOp> ::= 'neq' 
<RelOp> ::= 'lt' 
<RelOp> ::= 'gt' 
<RelOp> ::= 'leq' 
<RelOp> ::= 'geq' 
<START> ::= <Prog> 
<Sign> ::= 'plus' 
<Sign> ::= 'minus' 
<StatBlock> ::= 'lcurbr' <StatementList> 'rcurbr' 
<StatBlock> ::= <Statement> 
<StatBlock> ::= EPSILON 
<Statement> ::= <FuncOrAssignStat> 'semi' 
<Statement> ::= 'if' 'lpar' <Expr> 'rpar' 'then' <StatBlock> 'else' <StatBlock> 'semi' 
<Statement> ::= 'while' 'lpar' <Expr> 'rpar' <StatBlock> 'semi' 
<Statement> ::= 'read' 'lpar' <Variable> 'rpar' 'semi' 
<Statement> ::= 'write' 'lpar' <Expr> 'rpar' 'semi' 
<Statement> ::= 'return' 'lpar' <Expr> 'rpar' 'semi' 
<Statement> ::= 'break' 'semi' 
<Statement> ::= 'continue' 'semi' 
<StatementList> ::= <Statement> <StatementList> 
<StatementList> ::= EPSILON 
<Term> ::= <Factor> <TermTail> 
<TermTail> ::= <MultOp> <Factor> <TermTail> 
<TermTail> ::= EPSILON 
<Type> ::= 'integer' 
<Type> ::= 'float' 
<Type> ::= 'string' 
<Type> ::= 'id' 
<VarDecl> ::= <Type> 'id' <ArraySizeRept> 'semi' 
<VarDeclRep> ::= <VarDecl> <VarDeclRep> 
<VarDeclRep> ::= EPSILON 
<Variable> ::= 'id' <VariableIdnest> 
<VariableIdnest> ::= <IndiceRep> <VariableIdnestTail> 
<VariableIdnestTail> ::= 'dot' 'id' <VariableIdnest> 
<VariableIdnestTail> ::= EPSILON 
<Visibility> ::= 'public' 
<Visibility> ::= 'private' 
<Visibility> ::= EPSILON 