#pragma once
#include "AST.h"

class ProgNode;
class ClassDeclListNode;
class ClassDeclNode;
class MembListNode;
class InherListNode;
class FuncDefListNode;
class FuncDefNode;
class FuncBodyNode;
class FuncHeadNode;
class FuncDeclNode;
class FParamListNode;
class FParamNode;
class FCallNode;
class VisibilityNode;
class MemberDeclNode;
class IdNode;
class VarDeclNode;
class VarDeclListNode;
class TypeNode;
class IntegerNode;
class FloatNode;
class StringNode;
class DimListNode;
class NumIntNode;
class StatementNode;
class StatBlockNode;
class VariableNode;
class AssignStmtNode;
class IfStmtNode;
class ReadStmtNode;
class WriteStmtNode;
class ReturnStmtNode;
class ContinueNode;
class BreakNode;
class ArithExprNode;
class RelExprNode;
class WhileStmtNode;
class SignNode;
class PlusNode;
class MinusNode;
class RelOpNode;
class MultOpNode;
class MultNode;
class DivNode;
class AndNode;
class EqNode;
class GtNode;
class LtNode;
class NeqNode;
class GeqNode;
class LeqNode;
class IntLitNode;
class StringLitNode;
class FloatLitNode;
class DotNode;
class EpsilonNode;
class ScopeSpecNode;
class TermNode;
class IndiceListNode;
class PrivateNode;
class PublicNode;

class Visitor {
	public:
		Visitor();

		virtual void visit(ASTNode *node);

		virtual void visit(ProgNode *node) = 0;
		virtual void visit(ClassDeclListNode *node) = 0;
		virtual void visit(ClassDeclNode *node) = 0;
		virtual void visit(MembListNode *node) = 0;
		virtual void visit(InherListNode *node) = 0;
		virtual void visit(FuncDefListNode *node) = 0;
		virtual void visit(FuncDefNode *node) = 0;
		virtual void visit(FuncBodyNode *node) = 0;
		virtual void visit(FuncHeadNode *node) = 0;
		virtual void visit(FuncDeclNode *node) = 0;
		virtual void visit(FParamListNode *node) = 0;
		virtual void visit(FParamNode *node) = 0;
		virtual void visit(FCallNode *node) = 0;
		virtual void visit(VisibilityNode *node) = 0;
		virtual void visit(MemberDeclNode *node) = 0;
		virtual void visit(IdNode *node) = 0;
		virtual void visit(VarDeclNode *node) = 0;
		virtual void visit(VarDeclListNode *node) = 0;
		virtual void visit(TypeNode *node) = 0;
		virtual void visit(IntegerNode *node) = 0;
		virtual void visit(FloatNode *node) = 0;
		virtual void visit(StringNode *node) = 0;
		virtual void visit(DimListNode *node) = 0;
		virtual void visit(NumIntNode *node) = 0;
		virtual void visit(StatementNode *node) = 0;
		virtual void visit(StatBlockNode *node) = 0;
		virtual void visit(VariableNode *node) = 0;
		virtual void visit(AssignStmtNode *node) = 0;
		virtual void visit(IfStmtNode *node) = 0;
		virtual void visit(ReadStmtNode *node) = 0;
		virtual void visit(WriteStmtNode *node) = 0;
		virtual void visit(ReturnStmtNode *node) = 0;
		virtual void visit(ContinueNode *node) = 0;
		virtual void visit(BreakNode *node) = 0;
		virtual void visit(ArithExprNode *node) = 0;
		virtual void visit(RelExprNode *node) = 0;
		virtual void visit(WhileStmtNode *node) = 0;
		virtual void visit(SignNode *node) = 0;
		virtual void visit(PlusNode *node) = 0;
		virtual void visit(MinusNode *node) = 0;
		virtual void visit(RelOpNode *node) = 0;
		virtual void visit(MultOpNode *node) = 0;
		virtual void visit(MultNode *node) = 0;
		virtual void visit(DivNode *node) = 0;
		virtual void visit(AndNode *node) = 0;
		virtual void visit(EqNode *node) = 0;
		virtual void visit(GtNode *node) = 0;
		virtual void visit(LtNode *node) = 0;
		virtual void visit(NeqNode *node) = 0;
		virtual void visit(GeqNode *node) = 0;
		virtual void visit(LeqNode *node) = 0;
		virtual void visit(IntLitNode *node) = 0;
		virtual void visit(StringLitNode *node) = 0;
		virtual void visit(FloatLitNode *node) = 0;
		virtual void visit(DotNode *node) = 0;
		virtual void visit(EpsilonNode *node) = 0;
		virtual void visit(ScopeSpecNode *node) = 0;
		virtual void visit(TermNode *node) = 0;
		virtual void visit(IndiceListNode *node) = 0;
		virtual void visit(PrivateNode *node) = 0;
		virtual void visit(PublicNode *node) = 0;
};

class CreationVisitor : public Visitor {
	public:
		CreationVisitor();
		void visit(ProgNode *node);
		void visit(ClassDeclListNode *node);
		void visit(ClassDeclNode *node);
		void visit(MembListNode *node);
		void visit(InherListNode *node);
		void visit(FuncDefListNode *node);
		void visit(FuncDefNode *node);
		void visit(FuncBodyNode *node);
		void visit(FuncHeadNode *node);
		void visit(FuncDeclNode *node);
		void visit(FParamListNode *node);
		void visit(FParamNode *node);
		void visit(FCallNode *node);
		void visit(VisibilityNode *node);
		void visit(MemberDeclNode *node);
		void visit(IdNode *node);
		void visit(VarDeclNode *node);
		void visit(VarDeclListNode *node);
		void visit(TypeNode *node);
		void visit(IntegerNode *node);
		void visit(FloatNode *node);
		void visit(StringNode *node);
		void visit(DimListNode *node);
		void visit(NumIntNode *node);
		void visit(StatementNode *node);
		void visit(StatBlockNode *node);
		void visit(VariableNode *node);
		void visit(AssignStmtNode *node);
		void visit(IfStmtNode *node);
		void visit(ReadStmtNode *node);
		void visit(WriteStmtNode *node);
		void visit(ReturnStmtNode *node);
		void visit(ContinueNode *node);
		void visit(BreakNode *node);
		void visit(ArithExprNode *node);
		void visit(RelExprNode *node);
		void visit(WhileStmtNode *node);
		void visit(SignNode *node);
		void visit(PlusNode *node);
		void visit(MinusNode *node);
		void visit(RelOpNode *node);
		void visit(MultOpNode *node);
		void visit(MultNode *node);
		void visit(DivNode *node);
		void visit(AndNode *node);
		void visit(EqNode *node);
		void visit(GtNode *node);
		void visit(LtNode *node);
		void visit(NeqNode *node);
		void visit(GeqNode *node);
		void visit(LeqNode *node);
		void visit(IntLitNode *node);
		void visit(StringLitNode *node);
		void visit(FloatLitNode *node);
		void visit(DotNode *node);
		void visit(EpsilonNode *node);
		void visit(ScopeSpecNode *node);
		void visit(TermNode *node);
		void visit(IndiceListNode *node);
		void visit(PrivateNode *node);
		void visit(PublicNode *node);
};

class SemanticCheckingVisitor : public Visitor {
	public:
		SemanticCheckingVisitor();
		void visit(ProgNode *node);
		void visit(ClassDeclListNode *node);
		void visit(ClassDeclNode *node);
		void visit(MembListNode *node);
		void visit(InherListNode *node);
		void visit(FuncDefListNode *node);
		void visit(FuncDefNode *node);
		void visit(FuncBodyNode *node);
		void visit(FuncHeadNode *node);
		void visit(FuncDeclNode *node);
		void visit(FParamListNode *node);
		void visit(FParamNode *node);
		void visit(FCallNode *node);
		void visit(VisibilityNode *node);
		void visit(MemberDeclNode *node);
		void visit(IdNode *node);
		void visit(VarDeclNode *node);
		void visit(VarDeclListNode *node);
		void visit(TypeNode *node);
		void visit(IntegerNode *node);
		void visit(FloatNode *node);
		void visit(StringNode *node);
		void visit(DimListNode *node);
		void visit(NumIntNode *node);
		void visit(StatementNode *node);
		void visit(StatBlockNode *node);
		void visit(VariableNode *node);
		void visit(AssignStmtNode *node);
		void visit(IfStmtNode *node);
		void visit(ReadStmtNode *node);
		void visit(WriteStmtNode *node);
		void visit(ReturnStmtNode *node);
		void visit(ContinueNode *node);
		void visit(BreakNode *node);
		void visit(ArithExprNode *node);
		void visit(RelExprNode *node);
		void visit(WhileStmtNode *node);
		void visit(SignNode *node);
		void visit(PlusNode *node);
		void visit(MinusNode *node);
		void visit(RelOpNode *node);
		void visit(MultOpNode *node);
		void visit(MultNode *node);
		void visit(DivNode *node);
		void visit(AndNode *node);
		void visit(EqNode *node);
		void visit(GtNode *node);
		void visit(LtNode *node);
		void visit(NeqNode *node);
		void visit(GeqNode *node);
		void visit(LeqNode *node);
		void visit(IntLitNode *node);
		void visit(StringLitNode *node);
		void visit(FloatLitNode *node);
		void visit(DotNode *node);
		void visit(EpsilonNode *node);
		void visit(ScopeSpecNode *node);
		void visit(TermNode *node);
		void visit(IndiceListNode *node);
		void visit(PrivateNode *node);
		void visit(PublicNode *node);
};
